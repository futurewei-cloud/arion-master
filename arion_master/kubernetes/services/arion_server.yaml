# MIT License
# Copyright(c) 2020 Futurewei Cloud
#
#     Permission is hereby granted,
#     free of charge, to any person obtaining a copy of this software and associated documentation files(the "Software"), to deal in the Software without restriction,
#     including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and / or sell copies of the Software, and to permit persons
#     to whom the Software is furnished to do so, subject to the following conditions:
#
#     The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
#
#     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
#     WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

apiVersion: v1
kind: ServiceAccount
metadata:
  name: arion-account
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: arion
rules:
  - apiGroups:
      - ""
    resources: # Here are resources you can access
      - pods
      - endpoints
    verbs: # That is what you can do with them
      - get
      - list
      - watch
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: arion-master
roleRef:
  kind: ClusterRole
  name: arion
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: arion-account
    namespace: default

---
apiVersion: v1
kind: Service
metadata:
  # The name must be equal to TcpDiscoveryKubernetesIpFinder.serviceName
  name: arion-master-service
  # The name must be equal to TcpDiscoveryKubernetesIpFinder.namespaceName
  namespace: default
  labels:
    app: arion-master-service
spec:
  type: LoadBalancer
  ports:
    - name: hazelcast
      port: 5701
      targetPort: 5701
  selector:
    app: arionmaster
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: arion-configmap
data:
  application.properties: |
    arion.kubernetes.config = true
    arion.hazelcast.config.namespace =  default
    arion.hazelcast.config.service.name = arion-master-service
    arion.hazelcast.deployment = server
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: arionmaster
  name: arionmaster
spec:
  selector:
    matchLabels:
      app: arionmaster
  replicas: 3
  template:
    metadata:
      labels:
        app: arionmaster
    spec:
      serviceAccountName: arion-account
      volumes:
        - name: arion-volume
          configMap:
            name: arion-configmap
            items:
              - key: application.properties
                path: application.properties
      containers:
        - image: 363105346107.dkr.ecr.us-west-2.amazonaws.com/arionmaster:latest
          name: arion-master
          imagePullPolicy: Always
          command: ["java", "-jar", "/app/arionmaster-0.1.0-SNAPSHOT.jar", "--spring.config.location=/etc/arion/application.properties"]
          ports:
            - containerPort: 8080
              protocol: TCP
            - containerPort: 9090
              protocol: TCP
            - containerPort: 5701
                protocol: TCP
          volumeMounts:
            - name: arion-volume
              mountPath: /etc/arion
          envFrom:
            - configMapRef:
                name: arion-configmap
---
apiVersion: v1
kind: Service
metadata:
  name: arion-master-web-service
  labels:
    name: arion-master-web-service
spec:
  type: NodePort
  ports:
    - port: 9006
      targetPort: 8080
      nodePort: 30006
  selector:
    app: arionmaster

---
apiVersion: v1
kind: Service
metadata:
  name: arion-master-grpc-service
  labels:
    name: arion-master-grpc-service
spec:
  type: NodePort
  ports:
    - port: 9007
      targetPort: 9090
      nodePort: 30007
  selector:
    app: arionmaster

---
apiVersion: v1
kind: Service
metadata:
  name: arion-master-hazelcast-service
  labels:
    name: arion-master-hazelcat-service
spec:
  type: NodePort
  ports:
    - port: 5701
      targetPort: 5701
      nodePort: 30019
  selector:
    app: arionmaster